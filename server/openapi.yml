openapi: 3.0.0
info:
  version: 1.0.0
  title: dutch-account-app
  description: 割り勘計算アプリ
servers:
  - url: http://localhost:3000/api
    description: 開発環境
tags:
  - name: user
paths:
  /users:
    get:
      tags:
        - user
      summary: 全ユーザ情報取得API
      description: 全てのユーザ情報を取得する
      responses:
        200:
          description: 全てのユーザー情報
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/User"
    post:
      tags:
        - user
      summary: ユーザ作成API
      description: ユーザを作成する
      requestBody:
        description: 追加するユーザ情報
        content:
          application/json:
            schema:
              type: object
              required:
                - name
              properties:
                name:
                  type: string
                  example: 太郎
                  description: ユーザ名
      responses:
        201:
          description: 成功時のレスポンス
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        400:
          description: リクエストパラメーターに不備がある時のレスポンス
          content:
            application/json:
              schema:
                $ref: "#/components/responses/BadRequest"
              example:
                code: 400
                message: リクエストパラメーターに不備があリます
components:
  responses:
    BadRequest:
      description: リクエストパラメーターに不備がある時のレスポンス
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
  schemas:
    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: string
          description: HTTPステータスコード
        message:
          type: string
          description: エラーメッセージ
    User:
      type: object
      required:
        - id
        - name
      properties:
        id:
          type: integer
          format: int64
          example: 1
          description: ユーザID
        name:
          type: string
          example: 太郎
          description: ユーザ名
